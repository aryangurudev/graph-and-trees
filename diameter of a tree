
#include <bits/stdc++.h>
#define rep(i,a,b) for(int i=(a);i<(b);i++)
#define per(i,a,b) for(int i=(a);i>(b);i--)
#define pb push_back
#define ff first
#define ss second
#define endl '\n'
#define mp make_pair
#define pb push_back
#define gap " "
//memset(dp,-1,sizeof(dp)) sets value to -1 of everything in dp
//vector < vector<int > > vec(n,vector<int>(m,0)) here n are rows(top to down ) and m columns all with m vectors initialised with values 0
//ARRAY OF VECTORS --> vector<int> ar[size] and to pass it in a function we use foo(vector<int>(&ar)[size])
//use the above line for graph :P

typedef long long ll;
using namespace std;
vector<int> arr[2001];
int vis[2001];
int maxD, maxNode;
void dfs(int node, int d)
{
    vis[node]=1;
    if(d>maxD)
    {
        maxD=d;
        maxNode=node;
    }
    for(int child:arr[node])
    {
        if(vis[child]==0)
        {
            dfs(child,d+1);
        }
    }
}
int solve(){
    int n,m;
    cin>>n>>m;
    rep(i,0,n)
    {
        int a,b;
        cin>>a>>b;
        arr[a].pb(b);
        arr[b].pb(a);

    }
    maxD=-1;
    dfs(1,0);
    rep(i,1,n+1)
    {
        vis[i]=0    ;

    }
    maxD=-1;
    dfs(maxNode,0);
    cout<<maxD<<endl;

    return 0;
}
int main(){
int t;
cin>>t;
while(t--){
      solve();
}
return 0;
}
